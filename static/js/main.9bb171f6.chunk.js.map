{"version":3,"sources":["components/Header/Header.js","config.js","components/Login/Login.js","components/Nav/Navigation.js","components/LeftNav/LeftNav.js","currencySymbols.js","components/Account/Account.js","components/Account/AccountDetails.js","components/Liquidity/RuleTable.js","components/Liquidity/Liquidity.js","components/Liquidity/LiquidityDetails.js","serviceWorker.js","index.js","components/MyApp.js"],"names":["Header","react_default","a","createElement","className","this","props","title","showLogout","href","Component","BASE_URL","configs","LOGIN_URL","ACCOUNT_URL","BALANCE_URL","TRANSACTIONS_URL","LIQUIDITY_URL","SECRET_KEY","SECRET_KEY2","Login","state","notification","onSubmit","console","log","config","axios","method","url","headers","username","_this","password","responseType","then","resp","sessionStorage","setItem","data","hashHistory","push","catch","err","response","setState","_this2","components_Header_Header","htmlFor","message","bind","type","id","placeholder","onChange","e","target","value","required","es","to","Navigation","clientId","getItem","LeftNav","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","classes","arr","name","clicked","_this$state","map","element","key","onClick","setActiveTab","symbols","EUR","USD","GBP","Account","componentDidMount","localStorage","loadAccounts","that","assertThisInitialized","accounts","loadBalances","accountObj","account","index","accountId","length","balances","loadTransactions","transactions","setTimeout","loading","getCurrencySymbol","currency","dangerouslySetInnerHTML","__html","renderTransactions","accountID","productRef","accountDetails","notional","accountsCard","cashBalance","AccountDetail","Nav_Navigation","components_LeftNav_LeftNav","components_Account_Account","ruleTable","rule","accountCCY","changed","upperLimit","lowerLimit","sweepAccount","save","Liqudity","loadRules","rules","request","fieldName","ruleIndex","findIndex","p","objectSpread","toConsumableArray","post","error","RuleTable","update","Liquidity_Liquidity","Boolean","window","location","hostname","match","ReactDOM","render","history","path","component","_ref","children","AccountDetails","LiquidityDetails","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9bb171f6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./header.css\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        {this.props.title}\r\n        {this.props.showLogout && (\r\n          <a href=\"#/\" className=\"text-light float-right\">\r\n            Logout\r\n          </a>\r\n        )}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","//const BASE_URL = \"//34.66.216.192\";\r\nconst LOGIN_URL = \"//34.66.216.192:8443\";\r\nconst BASE_URL = \"//synechronliquify-eval-test.apigee.net\";\r\nconst LIQUIDITY_URL = \"//34.66.216.192:90\";\r\n//const BASE_URL = \"//34.66.216.192\";\r\n\r\nconst configs = {\r\n  LOGIN_URL: LOGIN_URL + \"/setup/login\",\r\n  ACCOUNT_URL: BASE_URL + \"/account/client/\",\r\n  BALANCE_URL: BASE_URL + \"/account/balance/\",\r\n  TRANSACTIONS_URL: BASE_URL + \"/account/transactions/\",\r\n  LIQUIDITY_URL: LIQUIDITY_URL + \"/liquify/param/\",\r\n  SECRET_KEY: \"I4A0eOWb9iZVO7nplHiwjLuUpUdSJxQv\",\r\n  SECRET_KEY2: \"KpUzbs35ZMkp0oqeXeq93bGDeW8rJUC7\"\r\n};\r\nexport default configs;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport { Link, hashHistory } from \"react-router\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./login.css\";\r\nimport \"../../index.css\";\r\nimport config from \"../../config\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    notification: \"\"\r\n  };\r\n  onSubmit = () => {\r\n    console.log(config.LOGIN_URL);\r\n    axios({\r\n      method: \"get\",\r\n      url: config.LOGIN_URL,\r\n      headers: {\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      },\r\n      responseType: \"json\"\r\n    })\r\n      .then(resp => {\r\n        console.log(resp);\r\n        sessionStorage.setItem(\"clientId\", resp.data.username);\r\n        hashHistory.push(\"/account/details/\" + resp.data.username);\r\n      })\r\n      .catch(err => {\r\n        console.log(\"ERROR ^^\", err, err.response);\r\n        this.setState({\r\n          notification: \"SOME ERROR OCCORED\"\r\n        });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header title=\"Automated Liquidity\" />\r\n        <div className=\"main-container\">\r\n          <div>\r\n            <i className=\"fas fa-university univ\" />\r\n          </div>\r\n          <h3 htmlFor=\"userid\">Secure login</h3>\r\n          <div className=\"text-danger\">\r\n            {this.state &&\r\n              this.state.notification &&\r\n              this.state.notification.message}\r\n          </div>\r\n          <form onSubmit={this.onSubmit.bind(this)}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"userid\"\r\n                placeholder=\"Enter online ID\"\r\n                onChange={e => {\r\n                  this.setState({ username: e.target.value });\r\n                }}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"password\"\r\n                placeholder=\"Enter password\"\r\n                onChange={e => {\r\n                  this.setState({ password: e.target.value });\r\n                }}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"form-check\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  id=\"dropdownCheck\"\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"dropdownCheck\">\r\n                  Save online ID\r\n                </label>\r\n                <label className=\"form-check-label float-right\">\r\n                  Security & help\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-secondary login-btn-secondary\"\r\n            >\r\n              <i className=\"fas fa-lock login-lock\" /> Sign in\r\n            </button>\r\n          </form>\r\n          <div className=\"dropdown-divider\" />\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-sm text-left\">\r\n              <Link to=\"/\">Forgot Id</Link>\r\n            </div>\r\n            <div className=\"col-sm text-center\">\r\n              <Link to=\"/\">Forgot password?</Link>\r\n            </div>\r\n            <div className=\"col-sm text-right\">\r\n              <Link to=\"/\">Enroll</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport \"./nav.css\";\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <section>\r\n        <ul className=\"nav nav-pills liquidity-nav\">\r\n          <li className=\"nav-item\">\r\n            <i className=\"fas fa-university nav-icon-univ\" />\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#/account/details\">\r\n              Liquidity Management\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#/account/details\">\r\n              My Transactions\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" href=\"#/account/details\">\r\n              Account Details\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <div />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport { hashHistory } from \"react-router\";\r\nconst clientId = sessionStorage.getItem(\"clientId\");\r\n\r\nclass LeftNav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      classes: \"\",\r\n      arr: [\r\n        { id: 1, name: \"Account Details\", url: \"/account/details/\" + clientId },\r\n        { id: 2, name: \"Liquidity Management\", url: \"/liquidity/\" },\r\n        { id: 3, name: \"My Transactions\", url: \"\" },\r\n        { id: 4, name: \"Help & Support\", url: \"\" },\r\n        { id: 5, name: \"Security & Settings\", url: \"\" }\r\n      ],\r\n      clicked: props.id || 1\r\n    };\r\n  }\r\n\r\n  setActiveTab(id, url) {\r\n    this.setState({ clicked: id });\r\n    if (url) hashHistory.push(url);\r\n  }\r\n  render() {\r\n    const { arr, clicked } = this.state;\r\n    return (\r\n      <div className=\"list-group\">\r\n        {arr.map(element => (\r\n          <button\r\n            key={element.id}\r\n            className={\r\n              clicked === element.id\r\n                ? \"list-group-item list-group-item-action active\"\r\n                : \"list-group-item list-group-item-action\"\r\n            }\r\n            onClick={this.setActiveTab.bind(this, element.id, element.url)}\r\n          >\r\n            {element.name}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeftNav;\r\n","const symbols = {\r\n  EUR: \"&#8364;\",\r\n  USD: \"&#36;\",\r\n  GBP: \"&#163;\"\r\n};\r\nexport default symbols;\r\n","import React, { Component } from \"react\";\r\nimport config from \"../../config\";\r\nimport symbols from \"../../currencySymbols\";\r\n\r\nimport axios from \"axios\";\r\nimport \"./accounts.css\";\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      accounts: {},\r\n      loading: true,\r\n      balances: {},\r\n      transactions: {}\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    let clientId = localStorage.getItem(\"clientId\");\r\n    if (clientId) {\r\n      this.loadAccounts(localStorage.getItem(\"clientId\"));\r\n    } else {\r\n      this.setState({\r\n        notification: \"unable to load client id\"\r\n      });\r\n    }\r\n  };\r\n\r\n  loadAccounts = clientId => {\r\n    let that = this;\r\n    axios({\r\n      method: \"get\",\r\n      url: config.ACCOUNT_URL + clientId,\r\n      responseType: \"json\"\r\n    })\r\n      .then(resp => {\r\n        that.state.accounts = resp.data;\r\n        that.loadBalances(resp.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(\"exception while loading accounts \", e);\r\n      });\r\n  };\r\n\r\n  loadBalances = data => {\r\n    let that = this;\r\n    let accountObj = {};\r\n    data.map((account, index) => {\r\n      return axios({\r\n        method: \"get\",\r\n        url: config.BALANCE_URL + account.accountId,\r\n        responseType: \"json\"\r\n      })\r\n        .then(resp => {\r\n          accountObj[account.accountId] = resp.data;\r\n          if (data.length - 1 === index) {\r\n            that.state.balances = accountObj;\r\n            this.loadTransactions(data);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          console.log(\"exception while loading balances \", e);\r\n        });\r\n    });\r\n  };\r\n\r\n  loadTransactions = data => {\r\n    let that = this;\r\n    let accountObj = {};\r\n    data.map((account, index) => {\r\n      return axios({\r\n        method: \"get\",\r\n        url: config.TRANSACTIONS_URL + account.accountId,\r\n        responseType: \"json\"\r\n      })\r\n        .then(resp => {\r\n          accountObj[account.accountId] = resp.data;\r\n          that.state.transactions = accountObj;\r\n          if (data.length - 1 === index) {\r\n            setTimeout(() => {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }, 1000);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          console.log(\"exception while loading transactions \", e);\r\n        });\r\n    });\r\n  };\r\n\r\n  getCurrencySymbol = currency => {\r\n    if (symbols[currency])\r\n      return <span dangerouslySetInnerHTML={{ __html: symbols[currency] }} />;\r\n    else return currency;\r\n  };\r\n\r\n  renderTransactions = accountID => {\r\n    return (\r\n      <div>\r\n        {this.state.transactions &&\r\n          this.state.transactions[accountID] &&\r\n          this.state.transactions[accountID].map((transactions, index) => {\r\n            return (\r\n              <div className=\"transactions-row\" key={\"transaction_\" + index}>\r\n                <span>{transactions.productRef}</span>\r\n                <span className=\"text-right\">\r\n                  {this.getCurrencySymbol(transactions.accountDetails.currency)}{\" \"}\r\n                  {transactions.notional}\r\n                </span>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading === true) return <div>Loading...</div>;\r\n    let accountsCard = null;\r\n    if (this.state.accounts) {\r\n      accountsCard = (\r\n        <div className=\"row\">\r\n          {this.state.accounts.map((account, index) => {\r\n            return (\r\n              <div className=\"col-sm-4\" key={index}>\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{account.currency} account</h5>\r\n                    <div className=\"card-text\">\r\n                      {this.state.balances[account.accountId].currency}{\" \"}\r\n                      {this.state.balances[account.accountId].cashBalance}\r\n                      {this.renderTransactions(account.accountId)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n    return <div>{accountsCard}</div>;\r\n  }\r\n}\r\n\r\nexport default Account;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport Nav from \"../Nav/Navigation\";\r\nimport LeftNav from \"../LeftNav/LeftNav\";\r\nimport Account from \"./Account\";\r\n\r\nclass AccountDetail extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header title=\"Automated Liquidity Management\" showLogout={true} />\r\n        <div className=\"main-container\">\r\n          <Nav />\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3\">\r\n              <LeftNav id={1} />\r\n            </div>\r\n            <div className=\"col-sm-9\">\r\n              <Account />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountDetail;\r\n","import React from \"react\";\r\nconst ruleTable = props => {\r\n  return (\r\n    <table className=\"table table-bordered\">\r\n      <tbody>\r\n        <tr>\r\n          <td className=\"align-middle\">{props.rule.accountCCY}</td>\r\n          <td className=\"align-baseline\">\r\n            <label htmlFor=\"upperThreshold\">Upper threshold</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"upperThreshold\"\r\n              name=\"upperLimit\"\r\n              onChange={props.changed}\r\n              value={props.rule.upperLimit != null ? props.rule.upperLimit : \"\"}\r\n            />\r\n          </td>\r\n          <td className=\"align-top\">\r\n            <label htmlFor=\"lowerThreshold\">Lower threshold</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"lowerThreshold\"\r\n              name=\"lowerLimit\"\r\n              onChange={props.changed}\r\n              value={props.rule.lowerLimit != null ? props.rule.lowerLimit : \"\"}\r\n            />\r\n          </td>\r\n          <td className=\"align-top\">\r\n            <label htmlFor=\"sweeepAccount\">Sweeep Account</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"sweeepAccount\"\r\n              name=\"sweepAccount\"\r\n              onChange={props.changed}\r\n              value={\r\n                props.rule.sweepAccount != null ? props.rule.sweepAccount : \"\"\r\n              }\r\n            />\r\n          </td>\r\n          <td className=\"align-middle text-center\">\r\n            <i className=\"fas fa-cog text-primary font-weight-bold\" />\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mb-2\"\r\n              onClick={props.save}\r\n            >\r\n              save\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default ruleTable;\r\n","import React, { Component } from \"react\";\r\nimport config from \"../../config\";\r\nimport axios from \"axios\";\r\nimport RuleTable from \"./RuleTable\";\r\nimport \"./Liquidity.css\";\r\n\r\nclass Liqudity extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      rules: []\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    let clientId = sessionStorage.getItem(\"clientId\");\r\n    if (clientId) {\r\n      this.loadRules(clientId);\r\n    } else {\r\n      this.setState({\r\n        notification: \"unable to load client id\"\r\n      });\r\n    }\r\n  };\r\n\r\n  loadRules = clientId => {\r\n    //let that = this;\r\n    axios({\r\n      method: \"get\",\r\n      url: config.LIQUIDITY_URL + clientId,\r\n      responseType: \"json\"\r\n    })\r\n      .then(resp => {\r\n        console.log(\"resp.data \", resp.data);\r\n        this.setState({\r\n          loading: false,\r\n          rules: resp.data\r\n        });\r\n        //this.state.rules = resp.data;\r\n      })\r\n      .catch(e => {\r\n        this.setState({\r\n          loading: false\r\n        });\r\n        console.log(\"exception while loading rules \", e, e.request, e.message);\r\n      });\r\n  };\r\n\r\n  changed = (e, id) => {\r\n    let fieldName = e.target.name;\r\n    const ruleIndex = this.state.rules.findIndex(p => {\r\n      return p.accountId === id;\r\n    });\r\n    const rule = {\r\n      ...this.state.rules[ruleIndex]\r\n    };\r\n\r\n    rule[fieldName] = e.target.value;\r\n    const rules = [...this.state.rules];\r\n    rules[ruleIndex] = rule;\r\n\r\n    this.setState({\r\n      rules: rules\r\n    });\r\n  };\r\n\r\n  update(e, id) {\r\n    console.log(\"update \", id);\r\n    const ruleIndex = this.state.rules.findIndex(p => {\r\n      return p.accountId === id;\r\n    });\r\n    console.log(\"this.state.rules[ruleIndex] \", this.state.rules[ruleIndex]);\r\n    axios\r\n      .post(config.LIQUIDITY_URL, this.state.rules[ruleIndex])\r\n      .then(function(response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading === true) return <div>Loading...</div>;\r\n    return (\r\n      <div>\r\n        {this.state.rules.map((rules, index) => {\r\n          return (\r\n            <RuleTable\r\n              key={index}\r\n              rule={rules}\r\n              changed={e => {\r\n                this.changed(e, rules.accountId);\r\n              }}\r\n              save={e => {\r\n                this.update(e, rules.accountId);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Liqudity;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport Nav from \"../Nav/Navigation\";\r\nimport LeftNav from \"../LeftNav/LeftNav\";\r\nimport Liquidity from \"./Liquidity\";\r\n\r\nclass AccountDetail extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header title=\"Automated Liquidity Management\" showLogout={true} />\r\n        <div className=\"main-container\">\r\n          <Nav />\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3\">\r\n              <LeftNav id={2} />\r\n            </div>\r\n            <div className=\"col-sm-9\">\r\n              <Liquidity />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountDetail;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Router, Route, hashHistory, IndexRoute } from \"react-router\";\nimport MyApp from \"./components/MyApp\";\nimport Login from \"./components/Login/Login\";\nimport AccountDetails from \"./components/Account/AccountDetails\";\nimport LiquidityDetails from \"./components/Liquidity/LiquidityDetails\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router history={hashHistory}>\n    <Route path=\"/\" component={MyApp}>\n      <IndexRoute component={Login} />\n      <Route path=\"/account/details/:id\" component={AccountDetails} />\n      <Route path=\"/liquidity\" component={LiquidityDetails} />\n    </Route>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\nif (module.hot) module.hot.accept();\n","import React from \"react\";\r\n\r\nexport default ({ children }) => {\r\n  return <div className=\"container\">{children}</div>;\r\n};\r\n"],"sourceRoot":""}