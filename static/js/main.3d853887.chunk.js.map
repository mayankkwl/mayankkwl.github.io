{"version":3,"sources":["components/Header/Header.js","config.js","components/Login/Login.js","components/Nav/Navigation.js","components/LeftNav/LeftNav.js","components/Account/Account.js","components/Account/AccountDetails.js","serviceWorker.js","index.js","components/MyApp.js"],"names":["Header","react_default","a","createElement","className","this","props","title","showLogout","href","Component","BASE_URL","configs","LOGIN_URL","ACCOUNT_URL","BALANCE_URL","TRANSACTIONS_URL","SECRET_KEY","Login","state","notification","onSubmit","console","log","config","axios","method","url","headers","username","_this","password","responseType","then","resp","localStorage","setItem","data","hashHistory","push","catch","err","setState","response","_this2","components_Header_Header","htmlFor","message","bind","type","id","placeholder","onChange","e","target","value","required","es","to","Navigation","LeftNav","Account","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","getItem","loadAccounts","getClientId","clientId","that","assertThisInitialized","x-apikey","accounts","loadBalances","accountObj","map","account","index","accountId","length","balances","loadTransactions","transactions","setTimeout","loading","renderTransactions","accountID","key","productRef","accountDetails","currency","notional","accountsCard","cashBalance","AccountDetail","Nav_Navigation","components_LeftNav_LeftNav","components_Account_Account","Boolean","window","location","hostname","match","ReactDOM","render","history","path","component","_ref","children","AccountDetails","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qUAkBeA,0LAbX,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACfC,KAAKC,MAAMC,MACXF,KAAKC,MAAME,YACVP,EAAAC,EAAAC,cAAA,KAAGM,KAAK,KAAKL,UAAU,0BAAvB,kBANWM,+BCHfC,eAAW,2CASFC,EAPC,CACdC,UAAWA,mCACXC,YAAaH,EAAW,mBACxBI,YAAaJ,EAAW,oBACxBK,iBAAkBL,EAAW,yBAC7BM,WAAY,oCC6GCC,6MA1GbC,MAAQ,CACNC,aAAc,MAEhBC,SAAW,WACTC,QAAQC,IAAIC,EAAOX,WACnBY,IAAM,CACJC,OAAQ,MACRC,IAAKH,EAAOX,UACZe,QAAS,CACPC,SAAUC,EAAKX,MAAMU,SACrBE,SAAUD,EAAKX,MAAMY,UAEvBC,aAAc,SAEbC,KAAK,SAAAC,GACJZ,QAAQC,IAAIW,GACZC,aAAaC,QAAQ,WAAYF,EAAKG,KAAKR,UAC3CS,IAAYC,KAAK,oBAAsBL,EAAKG,KAAKR,YAElDW,MAAM,SAAAC,GACLnB,QAAQC,IAAI,WAAYkB,GACxBX,EAAKY,SAAS,CACZtB,aAAcqB,EAAIE,SAASN,kFAI1B,IAAAO,EAAAvC,KACP,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0C,EAAD,CAAQtC,MAAM,wBACdN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAEfH,EAAAC,EAAAC,cAAA,MAAI2C,QAAQ,UAAZ,gBACA7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZC,KAAKc,OACJd,KAAKc,MAAMC,cACXf,KAAKc,MAAMC,aAAa2B,SAE5B9C,EAAAC,EAAAC,cAAA,QAAMkB,SAAUhB,KAAKgB,SAAS2B,KAAK3C,OACjCJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACE8C,KAAK,OACL7C,UAAU,eACV8C,GAAG,SACHC,YAAY,kBACZC,SAAU,SAAAC,GACRT,EAAKF,SAAS,CAAEb,SAAUwB,EAAEC,OAAOC,SAErCC,UAAQ,KAGZvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACE8C,KAAK,WACL7C,UAAU,eACV8C,GAAG,WACHC,YAAY,iBACZC,SAAU,SAAAC,GACRT,EAAKF,SAAS,CAAEX,SAAUsB,EAAEC,OAAOC,SAErCC,UAAQ,KAGZvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACE8C,KAAK,WACL7C,UAAU,mBACV8C,GAAG,kBAELjD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmB0C,QAAQ,iBAA5C,kBAGA7C,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gCAAjB,qBAKJH,EAAAC,EAAAC,cAAA,UACE8C,KAAK,SACL7C,UAAU,yCAEVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAJf,aAOFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAMC,GAAG,KAAT,cAEFzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAMC,GAAG,KAAT,qBAEFzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAMC,GAAG,KAAT,qBAlGMhD,aCwBLiD,0LA5BX,OACE1D,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qCAEfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWK,KAAK,qBAA7B,yBAIFR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWK,KAAK,qBAA7B,oBAIFR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBK,KAAK,qBAApC,qBAKJR,EAAAC,EAAAC,cAAA,oBAxBiBO,cCaVkD,mLAZX,OACE3D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,mBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,wBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,mBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,kBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,+BARcM,qBCsJPmD,qBAlJb,SAAAA,EAAYvD,GAAO,IAAAwB,EAAA,OAAAgC,OAAAC,EAAA,EAAAD,CAAAzD,KAAAwD,IACjB/B,EAAAgC,OAAAE,EAAA,EAAAF,CAAAzD,KAAAyD,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA7D,KAAMC,KAQR6D,kBAAoB,WACHhC,aAAaiC,QAAQ,YAElCtC,EAAKuC,aAAalC,aAAaiC,QAAQ,aAEvCtC,EAAKY,SAAS,CACZtB,aAAc,8BAfDU,EAoBnBwC,YAAc,aApBKxC,EAwBnBuC,aAAe,SAAAE,GACb,IAAIC,EAAIV,OAAAW,EAAA,EAAAX,CAAAhC,GAERL,IAAM,CACJC,OAAQ,MACRC,IAAKH,EAAOV,YAAcyD,EAC1B3C,QAAS,CACP8C,WAAYlD,EAAOP,YAErBe,aAAc,SAEbC,KAAK,SAAAC,GACJsC,EAAKrD,MAAMwD,SAAWzC,EAAKG,KAC3BmC,EAAKI,aAAa1C,EAAKG,QAExBG,MAAM,SAAAa,GACL/B,QAAQC,IAAI,oCAAqC8B,MAxCpCvB,EA4CnB8C,aAAe,SAAAvC,GACb,IAAImC,EAAIV,OAAAW,EAAA,EAAAX,CAAAhC,GACJ+C,EAAa,GACjBxC,EAAKyC,IAAI,SAACC,EAASC,GACjB,OAAOvD,IAAM,CACXC,OAAQ,MACRC,IAAKH,EAAOT,YAAcgE,EAAQE,UAClCrD,QAAS,CACP8C,WAAYlD,EAAOP,YAErBe,aAAc,SAEbC,KAAK,SAAAC,GACJ2C,EAAWE,EAAQE,WAAa/C,EAAKG,KACjCA,EAAK6C,OAAS,IAAMF,IACtBR,EAAKrD,MAAMgE,SAAWN,EACtB/C,EAAKsD,iBAAiB/C,MAGzBG,MAAM,SAAAa,GACL/B,QAAQC,IAAI,oCAAqC8B,QAhEtCvB,EAqEnBsD,iBAAmB,SAAA/C,GACjB,IAAImC,EAAIV,OAAAW,EAAA,EAAAX,CAAAhC,GACJ+C,EAAa,GACjBxC,EAAKyC,IAAI,SAACC,EAASC,GACjB,OAAOvD,IAAM,CACXC,OAAQ,MACRC,IAAKH,EAAOR,iBAAmB+D,EAAQE,UACvCrD,QAAS,CACP8C,WAAYlD,EAAOP,YAErBe,aAAc,SAEbC,KAAK,SAAAC,GACJ2C,EAAWE,EAAQE,WAAa/C,EAAKG,KACrCmC,EAAKrD,MAAMkE,aAAeR,EACtBxC,EAAK6C,OAAS,IAAMF,GACtBM,WAAW,WACTxD,EAAKY,SAAS,CACZ6C,SAAS,KAEV,OAGN/C,MAAM,SAAAa,GACL/B,QAAQC,IAAI,wCAAyC8B,QA7F1CvB,EAkGnB0D,mBAAqB,SAAAC,GACnB,OACExF,EAAAC,EAAAC,cAAA,WACG2B,EAAKX,MAAMkE,cACVvD,EAAKX,MAAMkE,aAAaI,IACxB3D,EAAKX,MAAMkE,aAAaI,GAAWX,IAAI,SAACO,EAAcL,GACpD,OACE/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBsF,IAAK,eAAiBV,GACtD/E,EAAAC,EAAAC,cAAA,YAAOkF,EAAaM,YACpB1F,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACbiF,EAAaO,eAAeC,SAD/B,IAC0CR,EAAaS,eA1GnEhE,EAAKX,MAAQ,CACXwD,SAAU,GACVY,SAAS,EACTJ,SAAU,GACVE,aAAc,IANCvD,wEAqHV,IAAAc,EAAAvC,KACP,IAA2B,IAAvBA,KAAKc,MAAMoE,QAAkB,OAAOtF,EAAAC,EAAAC,cAAA,yBACxC,IAAI4F,EAAe,KAuBnB,OAtBI1F,KAAKc,MAAMwD,WACboB,EACE9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZC,KAAKc,MAAMwD,SAASG,IAAI,SAACC,EAASC,GACjC,OACE/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWsF,IAAKV,GAC7B/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAc2E,EAAQc,SAApC,YACA5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZwC,EAAKzB,MAAMgE,SAASJ,EAAQE,WAAWY,SAAU,IACjDjD,EAAKzB,MAAMgE,SAASJ,EAAQE,WAAWe,YACvCpD,EAAK4C,mBAAmBT,EAAQE,mBAU5ChF,EAAAC,EAAAC,cAAA,WAAM4F,UA/IKrF,cCsBPuF,mLAnBX,OACEhG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0C,EAAD,CAAQtC,MAAM,iCAAiCC,YAAY,IAC3DP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAC+F,EAAD,MACAjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACgG,EAAD,OAEFlG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACiG,EAAD,iBAZc1F,aCMR2F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP1G,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAQmD,QAAStE,KACfrC,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOoD,KAAK,IAAIC,UCTL,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAChB,OAAO/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAa4G,KDS/B/G,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAYqD,UAAW5F,IACvBjB,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOoD,KAAK,uBAAuBC,UAAWG,MAGlDC,SAASC,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrF,KAAK,SAAAsF,GACjCA,EAAaC","file":"static/js/main.3d853887.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./header.css\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        {this.props.title}\r\n        {this.props.showLogout && (\r\n          <a href=\"#/\" className=\"text-light float-right\">\r\n            Logout\r\n          </a>\r\n        )}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","const BASE_URL = \"//synechronliquify-eval-test.apigee.net\";\r\nconst LOGIN_URL = \"//34.66.216.192:8080\";\r\nconst configs = {\r\n  LOGIN_URL: LOGIN_URL + \"/setup/login\",\r\n  ACCOUNT_URL: BASE_URL + \"/account/client/\",\r\n  BALANCE_URL: BASE_URL + \"/account/balance/\",\r\n  TRANSACTIONS_URL: BASE_URL + \"/account/transactions/\",\r\n  SECRET_KEY: \"I4A0eOWb9iZVO7nplHiwjLuUpUdSJxQv\"\r\n};\r\nexport default configs;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport { Link, hashHistory } from \"react-router\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./login.css\";\r\nimport \"../../index.css\";\r\nimport config from \"../../config\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    notification: \"\"\r\n  };\r\n  onSubmit = () => {\r\n    console.log(config.LOGIN_URL);\r\n    axios({\r\n      method: \"get\",\r\n      url: config.LOGIN_URL,\r\n      headers: {\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      },\r\n      responseType: \"json\"\r\n    })\r\n      .then(resp => {\r\n        console.log(resp);\r\n        localStorage.setItem(\"clientId\", resp.data.username);\r\n        hashHistory.push(\"/account/details/\" + resp.data.username);\r\n      })\r\n      .catch(err => {\r\n        console.log(\"ERROR ^^\", err);\r\n        this.setState({\r\n          notification: err.response.data\r\n        });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header title=\"Automated Liquidity\" />\r\n        <div className=\"main-container\">\r\n          <div>\r\n            <i className=\"fas fa-university univ\" />\r\n          </div>\r\n          <h3 htmlFor=\"userid\">Secure login</h3>\r\n          <div className=\"text-danger\">\r\n            {this.state &&\r\n              this.state.notification &&\r\n              this.state.notification.message}\r\n          </div>\r\n          <form onSubmit={this.onSubmit.bind(this)}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"userid\"\r\n                placeholder=\"Enter online ID\"\r\n                onChange={e => {\r\n                  this.setState({ username: e.target.value });\r\n                }}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"password\"\r\n                placeholder=\"Enter password\"\r\n                onChange={e => {\r\n                  this.setState({ password: e.target.value });\r\n                }}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"form-check\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  id=\"dropdownCheck\"\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"dropdownCheck\">\r\n                  Save online ID\r\n                </label>\r\n                <label className=\"form-check-label float-right\">\r\n                  Security & help\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-secondary login-btn-secondary\"\r\n            >\r\n              <i className=\"fas fa-lock login-lock\" /> Sign in\r\n            </button>\r\n          </form>\r\n          <div className=\"dropdown-divider\" />\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-sm text-left\">\r\n              <Link to=\"/\">Forgot Id</Link>\r\n            </div>\r\n            <div className=\"col-sm text-center\">\r\n              <Link to=\"/\">Forgot password?</Link>\r\n            </div>\r\n            <div className=\"col-sm text-right\">\r\n              <Link to=\"/\">Enroll</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport \"./nav.css\";\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <section>\r\n        <ul className=\"nav nav-pills liquidity-nav\">\r\n          <li className=\"nav-item\">\r\n            <i className=\"fas fa-university nav-icon-univ\" />\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#/account/details\">\r\n              Liquidity Management\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#/account/details\">\r\n              My Transactions\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" href=\"#/account/details\">\r\n              Account Details\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <div />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\n\r\nclass LeftNav extends Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"list-group\">\r\n        <li className=\"list-group-item\">Account Details</li>\r\n        <li className=\"list-group-item\">Liquidity Management</li>\r\n        <li className=\"list-group-item\">My Transactions</li>\r\n        <li className=\"list-group-item\">Help & Support</li>\r\n        <li className=\"list-group-item\">Security & Settings</li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeftNav;\r\n","import React, { Component } from \"react\";\r\nimport config from \"../../config\";\r\nimport axios from \"axios\";\r\nimport \"./accounts.css\";\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      accounts: {},\r\n      loading: true,\r\n      balances: {},\r\n      transactions: {}\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    let clientId = localStorage.getItem(\"clientId\");\r\n    if (clientId) {\r\n      this.loadAccounts(localStorage.getItem(\"clientId\"));\r\n    } else {\r\n      this.setState({\r\n        notification: \"unable to load client id\"\r\n      });\r\n    }\r\n  };\r\n\r\n  getClientId = () => {\r\n    return;\r\n  };\r\n\r\n  loadAccounts = clientId => {\r\n    let that = this;\r\n\r\n    axios({\r\n      method: \"get\",\r\n      url: config.ACCOUNT_URL + clientId,\r\n      headers: {\r\n        \"x-apikey\": config.SECRET_KEY\r\n      },\r\n      responseType: \"json\"\r\n    })\r\n      .then(resp => {\r\n        that.state.accounts = resp.data;\r\n        that.loadBalances(resp.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(\"exception while loading accounts \", e);\r\n      });\r\n  };\r\n\r\n  loadBalances = data => {\r\n    let that = this;\r\n    let accountObj = {};\r\n    data.map((account, index) => {\r\n      return axios({\r\n        method: \"get\",\r\n        url: config.BALANCE_URL + account.accountId,\r\n        headers: {\r\n          \"x-apikey\": config.SECRET_KEY\r\n        },\r\n        responseType: \"json\"\r\n      })\r\n        .then(resp => {\r\n          accountObj[account.accountId] = resp.data;\r\n          if (data.length - 1 === index) {\r\n            that.state.balances = accountObj;\r\n            this.loadTransactions(data);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          console.log(\"exception while loading balances \", e);\r\n        });\r\n    });\r\n  };\r\n\r\n  loadTransactions = data => {\r\n    let that = this;\r\n    let accountObj = {};\r\n    data.map((account, index) => {\r\n      return axios({\r\n        method: \"get\",\r\n        url: config.TRANSACTIONS_URL + account.accountId,\r\n        headers: {\r\n          \"x-apikey\": config.SECRET_KEY\r\n        },\r\n        responseType: \"json\"\r\n      })\r\n        .then(resp => {\r\n          accountObj[account.accountId] = resp.data;\r\n          that.state.transactions = accountObj;\r\n          if (data.length - 1 === index) {\r\n            setTimeout(() => {\r\n              this.setState({\r\n                loading: false\r\n              });\r\n            }, 1000);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          console.log(\"exception while loading transactions \", e);\r\n        });\r\n    });\r\n  };\r\n\r\n  renderTransactions = accountID => {\r\n    return (\r\n      <div>\r\n        {this.state.transactions &&\r\n          this.state.transactions[accountID] &&\r\n          this.state.transactions[accountID].map((transactions, index) => {\r\n            return (\r\n              <div className=\"transactions-row\" key={\"transaction_\" + index}>\r\n                <span>{transactions.productRef}</span>\r\n                <span className=\"text-right\">\r\n                  {transactions.accountDetails.currency} {transactions.notional}\r\n                </span>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading === true) return <div>Loading...</div>;\r\n    let accountsCard = null;\r\n    if (this.state.accounts) {\r\n      accountsCard = (\r\n        <div className=\"row\">\r\n          {this.state.accounts.map((account, index) => {\r\n            return (\r\n              <div className=\"col-sm-4\" key={index}>\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{account.currency} account</h5>\r\n                    <div className=\"card-text\">\r\n                      {this.state.balances[account.accountId].currency}{\" \"}\r\n                      {this.state.balances[account.accountId].cashBalance}\r\n                      {this.renderTransactions(account.accountId)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n    return <div>{accountsCard}</div>;\r\n  }\r\n}\r\n\r\nexport default Account;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport Nav from \"../Nav/Navigation\";\r\nimport LeftNav from \"../LeftNav/LeftNav\";\r\nimport Account from \"./Account\";\r\n\r\nclass AccountDetail extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header title=\"Automated Liquidity Management\" showLogout={true} />\r\n        <div className=\"main-container\">\r\n          <Nav />\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3\">\r\n              <LeftNav />\r\n            </div>\r\n            <div className=\"col-sm-9\">\r\n              <Account />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountDetail;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Router, Route, hashHistory, IndexRoute } from \"react-router\";\nimport MyApp from \"./components/MyApp\";\nimport Login from \"./components/Login/Login\";\nimport AccountDetails from \"./components/Account/AccountDetails\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router history={hashHistory}>\n    <Route path=\"/\" component={MyApp}>\n      <IndexRoute component={Login} />\n      <Route path=\"/account/details/:id\" component={AccountDetails} />\n    </Route>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\nif (module.hot) module.hot.accept();\n","import React from \"react\";\r\n\r\nexport default ({ children }) => {\r\n  return <div className=\"container\">{children}</div>;\r\n};\r\n"],"sourceRoot":""}